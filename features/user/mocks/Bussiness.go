// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	user "Backend_Mini_Project-ECOFriends/features/user"

	mock "github.com/stretchr/testify/mock"
)

// Bussiness is an autogenerated mock type for the Bussiness type
type Bussiness struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: data
func (_m *Bussiness) CreateUser(data user.UserCore) (user.UserCore, error) {
	ret := _m.Called(data)

	var r0 user.UserCore
	if rf, ok := ret.Get(0).(func(user.UserCore) user.UserCore); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(user.UserCore)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(user.UserCore) error); ok {
		r1 = rf(data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteUser provides a mock function with given fields: id
func (_m *Bussiness) DeleteUser(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllUser provides a mock function with given fields:
func (_m *Bussiness) GetAllUser() []user.UserCore {
	ret := _m.Called()

	var r0 []user.UserCore
	if rf, ok := ret.Get(0).(func() []user.UserCore); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]user.UserCore)
		}
	}

	return r0
}

// GetUserById provides a mock function with given fields: id
func (_m *Bussiness) GetUserById(id int) (user.UserCore, error) {
	ret := _m.Called(id)

	var r0 user.UserCore
	if rf, ok := ret.Get(0).(func(int) user.UserCore); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(user.UserCore)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Login provides a mock function with given fields: data
func (_m *Bussiness) Login(data user.UserCore) (user.UserCore, error) {
	ret := _m.Called(data)

	var r0 user.UserCore
	if rf, ok := ret.Get(0).(func(user.UserCore) user.UserCore); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(user.UserCore)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(user.UserCore) error); ok {
		r1 = rf(data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateUser provides a mock function with given fields: data
func (_m *Bussiness) UpdateUser(data user.UserCore) (user.UserCore, error) {
	ret := _m.Called(data)

	var r0 user.UserCore
	if rf, ok := ret.Get(0).(func(user.UserCore) user.UserCore); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(user.UserCore)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(user.UserCore) error); ok {
		r1 = rf(data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
